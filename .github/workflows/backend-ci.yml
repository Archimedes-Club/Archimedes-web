name: Backend CI

on:
  push:
    branches: [ frontEnd-test ]
    paths:
      - 'laravel-backend/**'
  pull_request:
    branches: [ frontEnd-test ]
    paths:
      - 'laravel-backend/**'

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: archimedesdb_testing
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Setup PHP environment
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, pdo_mysql

      # Step 3: Cache Composer packages
      - name: Cache Composer packages
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      # Step 4: Install Composer dependencies
      - name: Install Composer Dependencies
        working-directory: laravel-backend
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      # Step 5: Set Directory Permissions
      - name: Set Directory Permissions
        working-directory: laravel-backend
        run: chmod -R 777 storage bootstrap/cache

      # Step 6: Prepare backend environment using .env.testing
      - name: Prepare Environment
        working-directory: laravel-backend
        run: |
          cp .env.testing .env
          php artisan key:generate

      # Step 7: Run migrations and seed the database
      - name: Migrate and Seed Database
        working-directory: laravel-backend
        run: php artisan migrate --seed --env=testing

      # Step 8: Run Laravel tests
      - name: Run Backend Tests
        working-directory: laravel-backend
        run: php artisan test

